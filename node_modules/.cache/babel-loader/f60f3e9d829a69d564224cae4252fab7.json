{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WessDjo\\\\Desktop\\\\gomycoden\\\\checkpoint-redux-main\\\\mon-app\\\\src\\\\components\\\\TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { add, updateTask } from \"../actions/Actions.js\";\nimport { filterTodo } from \"../actions/Actions.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction TodoForm(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const [newTask, setNewtask] = useState(props.edit ? props.edit.task : '');\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setNewtask(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    if (!newTask || /^\\s*$/.test(newTask)) {\n      return;\n    }\n\n    e.preventDefault();\n    dispatch(add(newTask));\n    setNewtask('');\n  };\n\n  const handleUpdate = e => {\n    if (!newTask || /^\\s*$/.test(newTask)) {\n      return;\n    }\n\n    e.preventDefault();\n    setNewtask(props.edit.task = newTask);\n    dispatch(updateTask(props.edit)) && props.onSubmit();\n    setNewtask('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-form\",\n    children: props.edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Update your item\",\n        value: newTask,\n        onChange: handleChange,\n        name: \"text\",\n        ref: inputRef,\n        className: \"todo-input edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdate,\n        className: \"todo-button edit\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formfilter\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Add a todo\",\n        value: newTask,\n        onChange: handleChange,\n        name: \"text\",\n        ref: inputRef,\n        className: \"todo-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button\",\n        onClick: handleSubmit,\n        children: \"Add tod\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"dropdown__select\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"dropdown__selected\",\n            children: \"Filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          class: \"dropdown__list\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            class: \"dropdown__item\",\n            onClick: () => dispatch(filterTodo('')),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"dropdown__text\",\n              children: \"All\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            class: \"dropdown__item\",\n            onClick: () => dispatch(filterTodo(true)),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"dropdown__text\",\n              children: \"Done\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            class: \"dropdown__item\",\n            onClick: () => dispatch(filterTodo(false)),\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"dropdown__text\",\n              children: \"Not\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoForm, \"9cnXzsAPV3Y6gNnaNQOYlaEYQ7E=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["C:/Users/WessDjo/Desktop/gomycoden/checkpoint-redux-main/mon-app/src/components/TodoForm.js"],"names":["React","useState","useEffect","useRef","useDispatch","add","updateTask","filterTodo","TodoForm","props","dispatch","newTask","setNewtask","edit","task","inputRef","current","focus","handleChange","e","target","value","handleSubmit","test","preventDefault","handleUpdate","onSubmit"],"mappings":"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","sourcesContent":["\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useDispatch } from \"react-redux\";\nimport { add, updateTask } from \"../actions/Actions.js\";\nimport { filterTodo } from \"../actions/Actions.js\";\n\nfunction TodoForm(props) {\n\n  const dispatch = useDispatch();\n  const [newTask, setNewtask] = useState(props.edit ? props.edit.task : '');\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleChange = e => {\n    setNewtask(e.target.value);\n  };\n\n  const handleSubmit = e => {\n\n    if (!newTask || /^\\s*$/.test(newTask)) {\n      return;\n    }\n    e.preventDefault();\n\n    dispatch(add(newTask));\n    setNewtask('')\n  };\n\n  const handleUpdate = e => {\n    if (!newTask || /^\\s*$/.test(newTask)) {\n      return;\n    }\n    e.preventDefault();\n    setNewtask(props.edit.task = newTask)\n    dispatch(updateTask(props.edit)) && props.onSubmit()\n    setNewtask('')\n  };\n\n\n  return (\n\n    <div className='todo-form'>\n\n      {props.edit ? (\n        <>\n          <input\n            placeholder='Update your item'\n            value={newTask}\n            onChange={handleChange}\n            name='text'\n            ref={inputRef}\n\n            className='todo-input edit'\n          />\n          <button onClick={handleUpdate} className='todo-button edit'>\n            Update\n          </button>\n        </>\n      ) : (\n        <div className=\"formfilter\">\n          <input\n            placeholder='Add a todo'\n            value={newTask}\n            onChange={handleChange}\n            name='text'\n            ref={inputRef}\n            className='todo-input'\n\n          />\n          <button className='todo-button' onClick={handleSubmit}>\n            Add tod\n           </button>\n           <div class=\"dropdown\">\n      <div class=\"dropdown__select\">\n        <span class=\"dropdown__selected\">Filter</span>\n      </div>\n      <ul class=\"dropdown__list\">\n        <li class=\"dropdown__item\" onClick={() => dispatch(filterTodo(''))}>\n          <span class=\"dropdown__text\"  >All</span>        \n        </li>\n        <li class=\"dropdown__item\" onClick={() => dispatch(filterTodo(true))}>\n          <span class=\"dropdown__text\" >Done</span>\n        </li>\n        <li class=\"dropdown__item\" onClick={() => dispatch(filterTodo(false))}>\n          <span class=\"dropdown__text\" >Not</span>\n        </li>\n\n      </ul>\n    </div>\n\n        </div>\n        \n      )}\n\n    </div>\n  );\n}\n\nexport default TodoForm;\n"]},"metadata":{},"sourceType":"module"}